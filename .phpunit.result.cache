C:37:"PHPUnit\Runner\DefaultTestResultCache":35564:{a:2:{s:7:"defects";a:26:{s:34:"Functional\Tests\AverageTest::test";i:4;s:36:"Functional\Tests\EachTest::testArray";i:4;s:39:"Functional\Tests\EachTest::testIterator";i:4;s:35:"Functional\Tests\EachTest::testHash";i:4;s:43:"Functional\Tests\EachTest::testHashIterator";i:4;s:73:"Functional\Tests\FunctionalTest::testAllDefinedConstantsAreValidCallables";i:5;s:50:"Functional\Tests\MatchingTest::testDeprecatedAlias";i:3;s:54:"Functional\Tests\MemoizeTest::testMemoizeWithArguments";i:6;s:54:"Functional\Tests\MemoizeTest::testMemoizeWithCustomKey";i:6;s:53:"Functional\Tests\PollTest::testPollRetriesIfNotTruthy";i:4;s:64:"Functional\Tests\PollTest::testPollRetriesAndGivesUpAfterTimeout";i:3;s:61:"Functional\Tests\PollTest::testWithEmptyDelayCallsAtLeastOnce";i:6;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #0";i:4;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #1";i:4;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #2";i:4;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #3";i:4;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #4";i:4;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #5";i:4;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #6";i:4;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #7";i:4;s:48:"Functional\Tests\RetryTest::testRetriedIfItFails";i:4;s:68:"Functional\Tests\RetryTest::testThrowsExceptionIfRetryCountIsReached";i:6;s:59:"Functional\Tests\RetryTest::testRetryWithEmptyDelaySequence";i:6;s:63:"Functional\Tests\RetryTest::testUsesDelayTraversableForSleeping";i:6;s:57:"Functional\Tests\RetryTest::testDelayerSmallerThanRetries";i:6;s:32:"Functional\Tests\RatioTest::test";i:4;}s:5:"times";a:471:{s:30:"Functional\Tests\AryTest::test";d:0.002;s:39:"Functional\Tests\AryTest::testException";d:0;s:34:"Functional\Tests\AverageTest::test";d:0;s:50:"Functional\Tests\AverageTest::testPassNoCollection";d:0;s:34:"Functional\Tests\ButLastTest::test";d:0;s:50:"Functional\Tests\ButLastTest::testPassNoCollection";d:0;s:52:"Functional\Tests\CaptureTest::testCaptureReturnValue";d:0;s:59:"Functional\Tests\CompareObjectHashOnTest::testCompareValues";d:0;s:64:"Functional\Tests\CompareObjectHashOnTest::testCompareWithReducer";d:0;s:49:"Functional\Tests\CompareOnTest::testCompareValues";d:0;s:54:"Functional\Tests\CompareOnTest::testCompareWithReducer";d:0;s:34:"Functional\Tests\ComposeTest::test";d:0;s:49:"Functional\Tests\ComposeTest::testPassNoFunctions";d:0;s:33:"Functional\Tests\ConcatTest::test";d:0;s:49:"Functional\Tests\ConstFunctionTest::testWithValue";d:0;s:35:"Functional\Tests\ContainsTest::test";d:0;s:51:"Functional\Tests\ContainsTest::testPassNoCollection";d:0;s:53:"Functional\Tests\ConvergeTest::testCallablesAsStrings";d:0;s:55:"Functional\Tests\ConvergeTest::testCallablesAsAnonymous";d:0;s:63:"Functional\Tests\CurryNTest::testCallbackTypes with data set #0";d:0;s:63:"Functional\Tests\CurryNTest::testCallbackTypes with data set #1";d:0;s:63:"Functional\Tests\CurryNTest::testCallbackTypes with data set #2";d:0;s:63:"Functional\Tests\CurryNTest::testCallbackTypes with data set #3";d:0;s:63:"Functional\Tests\CurryNTest::testCallbackTypes with data set #4";d:0;s:63:"Functional\Tests\CurryNTest::testCallbackTypes with data set #5";d:0;s:63:"Functional\Tests\CurryNTest::testCallbackTypes with data set #6";d:0;s:63:"Functional\Tests\CurryNTest::testCallbackTypes with data set #7";d:0;s:63:"Functional\Tests\CurryNTest::testCallbackTypes with data set #8";d:0;s:63:"Functional\Tests\CurryNTest::testCallbackTypes with data set #9";d:0;s:64:"Functional\Tests\CurryNTest::testCallbackTypes with data set #10";d:0;s:62:"Functional\Tests\CurryTest::testCallbackTypes with data set #0";d:0;s:62:"Functional\Tests\CurryTest::testCallbackTypes with data set #1";d:0;s:62:"Functional\Tests\CurryTest::testCallbackTypes with data set #2";d:0;s:62:"Functional\Tests\CurryTest::testCallbackTypes with data set #3";d:0;s:62:"Functional\Tests\CurryTest::testCallbackTypes with data set #4";d:0;s:62:"Functional\Tests\CurryTest::testCallbackTypes with data set #5";d:0;s:62:"Functional\Tests\CurryTest::testCallbackTypes with data set #6";d:0;s:62:"Functional\Tests\CurryTest::testCallbackTypes with data set #7";d:0;s:62:"Functional\Tests\CurryTest::testCallbackTypes with data set #8";d:0;s:62:"Functional\Tests\CurryTest::testCallbackTypes with data set #9";d:0;s:63:"Functional\Tests\CurryTest::testCallbackTypes with data set #10";d:0;s:37:"Functional\Tests\DifferenceTest::test";d:0;s:83:"Functional\Tests\DifferenceTest::testElementsOfWrongTypeAreIgnored with data set #0";d:0;s:83:"Functional\Tests\DifferenceTest::testElementsOfWrongTypeAreIgnored with data set #1";d:0;s:83:"Functional\Tests\DifferenceTest::testElementsOfWrongTypeAreIgnored with data set #2";d:0;s:83:"Functional\Tests\DifferenceTest::testElementsOfWrongTypeAreIgnored with data set #3";d:0;s:83:"Functional\Tests\DifferenceTest::testElementsOfWrongTypeAreIgnored with data set #4";d:0;s:83:"Functional\Tests\DifferenceTest::testElementsOfWrongTypeAreIgnored with data set #5";d:0;s:83:"Functional\Tests\DifferenceTest::testElementsOfWrongTypeAreIgnored with data set #6";d:0;s:83:"Functional\Tests\DifferenceTest::testElementsOfWrongTypeAreIgnored with data set #7";d:0;s:53:"Functional\Tests\DifferenceTest::testPassNoCollection";d:0;s:31:"Functional\Tests\DropTest::test";d:0;s:72:"Functional\Tests\DropTest::testExceptionIsThrownInArray with data set #0";d:0;s:72:"Functional\Tests\DropTest::testExceptionIsThrownInArray with data set #1";d:0;s:71:"Functional\Tests\DropTest::testExceptionIsThrownInHash with data set #0";d:0;s:71:"Functional\Tests\DropTest::testExceptionIsThrownInHash with data set #1";d:0;s:75:"Functional\Tests\DropTest::testExceptionIsThrownInIterator with data set #0";d:0;s:75:"Functional\Tests\DropTest::testExceptionIsThrownInIterator with data set #1";d:0;s:79:"Functional\Tests\DropTest::testExceptionIsThrownInHashIterator with data set #0";d:0;s:79:"Functional\Tests\DropTest::testExceptionIsThrownInHashIterator with data set #1";d:0;s:64:"Functional\Tests\DropTest::testPassNoCollection with data set #0";d:0;s:64:"Functional\Tests\DropTest::testPassNoCollection with data set #1";d:0;s:63:"Functional\Tests\DropTest::testPassNonCallable with data set #0";d:0;s:63:"Functional\Tests\DropTest::testPassNonCallable with data set #1";d:0;s:36:"Functional\Tests\EachTest::testArray";d:0.005;s:39:"Functional\Tests\EachTest::testIterator";d:0;s:35:"Functional\Tests\EachTest::testHash";d:0;s:43:"Functional\Tests\EachTest::testHashIterator";d:0;s:55:"Functional\Tests\EachTest::testExceptionIsThrownInArray";d:0;s:60:"Functional\Tests\EachTest::testExceptionIsThrownInCollection";d:0;s:46:"Functional\Tests\EachTest::testPassNonCallable";d:0;s:47:"Functional\Tests\EachTest::testPassNoCollection";d:0;s:37:"Functional\Tests\EqualTest::testEqual";d:0;s:67:"Functional\Tests\ErrorToExceptionTest::testErrorIsThrownAsException";d:0;s:60:"Functional\Tests\ErrorToExceptionTest::testFunctionIsWrapped";d:0;s:76:"Functional\Tests\ErrorToExceptionTest::testExceptionsAreHandledTransparently";d:0;s:67:"Functional\Tests\ErrorToExceptionTest::testErrorHandlerNestingWorks";d:0;s:32:"Functional\Tests\EveryTest::test";d:0;s:47:"Functional\Tests\EveryTest::testPassNonCallable";d:0;s:48:"Functional\Tests\EveryTest::testPassNoCollection";d:0;s:46:"Functional\Tests\EveryTest::testPassNoCallable";d:0;s:56:"Functional\Tests\EveryTest::testExceptionIsThrownInArray";d:0;s:61:"Functional\Tests\EveryTest::testExceptionIsThrownInCollection";d:0;s:98:"Functional\Exceptions\InvalidArgumentExceptionTest::testCallbackExceptionWithUndefinedStaticMethod";d:0;s:94:"Functional\Exceptions\InvalidArgumentExceptionTest::testCallbackExceptionWithUndefinedFunction";d:0;s:92:"Functional\Exceptions\InvalidArgumentExceptionTest::testCallbackExceptionWithUndefinedMethod";d:0;s:96:"Functional\Exceptions\InvalidArgumentExceptionTest::testCallbackExceptionWithIncorrectArrayIndex";d:0;s:83:"Functional\Exceptions\InvalidArgumentExceptionTest::testCallbackExceptionWithObject";d:0;s:87:"Functional\Exceptions\InvalidArgumentExceptionTest::testExceptionIfStringIsPassedAsList";d:0;s:87:"Functional\Exceptions\InvalidArgumentExceptionTest::testExceptionIfObjectIsPassedAsList";d:0;s:82:"Functional\Exceptions\InvalidArgumentExceptionTest::testAssertArrayAccessValidCase";d:0;s:83:"Functional\Exceptions\InvalidArgumentExceptionTest::testAssertArrayAccessWithString";d:0;s:90:"Functional\Exceptions\InvalidArgumentExceptionTest::testAssertArrayAccessWithStandardClass";d:0;s:84:"Functional\Exceptions\InvalidArgumentExceptionTest::testExceptionIfInvalidMethodName";d:0;s:86:"Functional\Exceptions\InvalidArgumentExceptionTest::testExceptionIfInvalidPropertyName";d:0;s:92:"Functional\Exceptions\InvalidArgumentExceptionTest::testNoExceptionThrownWithPositiveInteger";d:0;s:106:"Functional\Exceptions\InvalidArgumentExceptionTest::testExceptionIfNegativeIntegerInsteadOfPositiveInteger";d:0;s:97:"Functional\Exceptions\InvalidArgumentExceptionTest::testExceptionIfStringInsteadOfPositiveInteger";d:0;s:85:"Functional\Exceptions\InvalidArgumentExceptionTest::testAssertIntegerAccessWithString";d:0;s:85:"Functional\Exceptions\InvalidArgumentExceptionTest::testAssertIntegerAccessWithObject";d:0;s:85:"Functional\Exceptions\InvalidArgumentExceptionTest::testAssertBooleanAccessWithString";d:0;s:85:"Functional\Exceptions\InvalidArgumentExceptionTest::testAssertBooleanAccessWithObject";d:0;s:32:"Functional\Tests\FalseTest::test";d:0;s:48:"Functional\Tests\FalseTest::testPassNoCollection";d:0;s:32:"Functional\Tests\FalsyTest::test";d:0;s:48:"Functional\Tests\FalsyTest::testPassNoCollection";d:0;s:39:"Functional\Tests\FirstIndexOfTest::test";d:0;s:76:"Functional\Tests\FirstIndexOfTest::testIfValueCouldNotBeFoundFalseIsReturned";d:0;s:51:"Functional\Tests\FirstIndexOfTest::testPassCallback";d:0;s:55:"Functional\Tests\FirstIndexOfTest::testPassNoCollection";d:0;s:49:"Functional\Tests\FirstTest::test with data set #0";d:0;s:49:"Functional\Tests\FirstTest::test with data set #1";d:0;s:64:"Functional\Tests\FirstTest::testWithoutCallback with data set #0";d:0;s:64:"Functional\Tests\FirstTest::testWithoutCallback with data set #1";d:0;s:64:"Functional\Tests\FirstTest::testPassNonCallable with data set #0";d:0;s:64:"Functional\Tests\FirstTest::testPassNonCallable with data set #1";d:0;s:73:"Functional\Tests\FirstTest::testExceptionIsThrownInArray with data set #0";d:0;s:73:"Functional\Tests\FirstTest::testExceptionIsThrownInArray with data set #1";d:0;s:78:"Functional\Tests\FirstTest::testExceptionIsThrownInCollection with data set #0";d:0;s:78:"Functional\Tests\FirstTest::testExceptionIsThrownInCollection with data set #1";d:0;s:65:"Functional\Tests\FirstTest::testPassNoCollection with data set #0";d:0;s:65:"Functional\Tests\FirstTest::testPassNoCollection with data set #1";d:0;s:38:"Functional\Tests\FlatMapTest::testList";d:0;s:46:"Functional\Tests\FlatMapTest::testListIterator";d:0;s:38:"Functional\Tests\FlatMapTest::testHash";d:0;s:46:"Functional\Tests\FlatMapTest::testHashIterator";d:0;s:50:"Functional\Tests\FlatMapTest::testPassNoCollection";d:0;s:49:"Functional\Tests\FlatMapTest::testPassNonCallable";d:0;s:34:"Functional\Tests\FlattenTest::test";d:0;s:50:"Functional\Tests\FlattenTest::testPassNoCollection";d:0;s:50:"Functional\Tests\FlipTest::testFlippedMergeStrings";d:0;s:46:"Functional\Tests\FlipTest::testFlippedSubtract";d:0;s:44:"Functional\Tests\FlipTest::testFlippedFilter";d:0;s:40:"Functional\Tests\FlipTest::testFlippedId";d:0;s:73:"Functional\Tests\FunctionalTest::testAllDefinedConstantsAreValidCallables";d:0.001;s:78:"Functional\Tests\FunctionalTest::testShouldHaveDefinedConstantsForAllFunctions";d:0.001;s:73:"Functional\Tests\GreaterThanOrEqualTest::testGreaterThanOrEqualComparison";d:0;s:59:"Functional\Tests\GreaterThanTest::testGreaterThanComparison";d:0;s:32:"Functional\Tests\GroupTest::test";d:0;s:79:"Functional\Tests\GroupTest::testExceptionIsThrownWhenCallbacksReturnsInvalidKey";d:0;s:56:"Functional\Tests\GroupTest::testExceptionIsThrownInArray";d:0;s:55:"Functional\Tests\GroupTest::testExceptionIsThrownInHash";d:0;s:59:"Functional\Tests\GroupTest::testExceptionIsThrownInIterator";d:0;s:63:"Functional\Tests\GroupTest::testExceptionIsThrownInHashIterator";d:0;s:48:"Functional\Tests\GroupTest::testPassNoCollection";d:0;s:47:"Functional\Tests\GroupTest::testPassNonCallable";d:0;s:38:"Functional\Tests\IdTest::testWithValue";d:0;s:55:"Functional\Tests\IdenticalTest::testIdenticalComparison";d:0;s:39:"Functional\Tests\IfElseTest::testIfElse";d:0;s:36:"Functional\Tests\IndexesOfTest::test";d:0;s:78:"Functional\Tests\IndexesOfTest::testIfValueCouldNotBeFoundEmptyArrayIsReturned";d:0;s:52:"Functional\Tests\IndexesOfTest::testPassNoCollection";d:0;s:38:"Functional\Tests\IntersperseTest::test";d:0;s:53:"Functional\Tests\IntersperseTest::testEmptyCollection";d:0;s:58:"Functional\Tests\IntersperseTest::testIntersperseWithArray";d:0;s:54:"Functional\Tests\IntersperseTest::testPassNoCollection";d:0;s:44:"Functional\Tests\InvokeFirstTest::testSimple";d:0;s:54:"Functional\Tests\InvokeFirstTest::testSkipNonCallables";d:0;s:54:"Functional\Tests\InvokeFirstTest::testPassNoCollection";d:0;s:56:"Functional\Tests\InvokeFirstTest::testPassNoPropertyName";d:0;s:47:"Functional\Tests\InvokeFirstTest::testException";d:0;s:35:"Functional\Tests\InvokeIfTest::test";d:0;s:57:"Functional\Tests\InvokeIfTest::testReturnDefaultValueUsed";d:0;s:43:"Functional\Tests\InvokeLastTest::testSimple";d:0;s:53:"Functional\Tests\InvokeLastTest::testSkipNonCallables";d:0;s:53:"Functional\Tests\InvokeLastTest::testPassNoCollection";d:0;s:55:"Functional\Tests\InvokeLastTest::testPassNoPropertyName";d:0;s:46:"Functional\Tests\InvokeLastTest::testException";d:0;s:33:"Functional\Tests\InvokeTest::test";d:0;s:49:"Functional\Tests\InvokeTest::testPassNoCollection";d:0;s:51:"Functional\Tests\InvokeTest::testPassNoPropertyName";d:0;s:42:"Functional\Tests\InvokeTest::testException";d:0;s:57:"Functional\Tests\InvokerTest::testInvokerWithoutArguments";d:0;s:54:"Functional\Tests\InvokerTest::testInvokerWithArguments";d:0;s:46:"Functional\Tests\InvokerTest::testPassNoString";d:0;s:47:"Functional\Tests\InvokerTest::testInvalidMethod";d:0;s:38:"Functional\Tests\LastIndexOfTest::test";d:0;s:75:"Functional\Tests\LastIndexOfTest::testIfValueCouldNotBeFoundFalseIsReturned";d:0;s:50:"Functional\Tests\LastIndexOfTest::testPassCallback";d:0;s:54:"Functional\Tests\LastIndexOfTest::testPassNoCollection";d:0;s:31:"Functional\Tests\LastTest::test";d:0;s:46:"Functional\Tests\LastTest::testWithoutCallback";d:0;s:46:"Functional\Tests\LastTest::testPassNonCallable";d:0;s:55:"Functional\Tests\LastTest::testExceptionIsThrownInArray";d:0;s:60:"Functional\Tests\LastTest::testExceptionIsThrownInCollection";d:0;s:47:"Functional\Tests\LastTest::testPassNoCollection";d:0;s:67:"Functional\Tests\LessThanOrEqualTest::testLessThanOrEqualComparison";d:0;s:53:"Functional\Tests\LessThanTest::testLessThanComparison";d:0;s:77:"Functional\Tests\LexicographicCompareTest::testLexicographicCompareComparison";d:0;s:30:"Functional\Tests\MapTest::test";d:0;s:54:"Functional\Tests\MapTest::testExceptionIsThrownInArray";d:0;s:53:"Functional\Tests\MapTest::testExceptionIsThrownInHash";d:0;s:57:"Functional\Tests\MapTest::testExceptionIsThrownInIterator";d:0;s:61:"Functional\Tests\MapTest::testExceptionIsThrownInHashIterator";d:0;s:46:"Functional\Tests\MapTest::testPassNoCollection";d:0;s:45:"Functional\Tests\MapTest::testPassNonCallable";d:0;s:43:"Functional\Tests\MatchingTest::testMatching";d:0.004;s:50:"Functional\Tests\MatchingTest::testNothingMatching";d:0;s:59:"Functional\Tests\MatchingTest::testMatchingConditionIsArray";d:0.001;s:58:"Functional\Tests\MatchingTest::testMatchingConditionLength";d:0;s:61:"Functional\Tests\MatchingTest::testMatchingConditionCallables";d:0;s:50:"Functional\Tests\MatchingTest::testDeprecatedAlias";d:0;s:56:"Functional\Tests\MaximumTest::testExtractingMaximumValue";d:0;s:49:"Functional\Tests\MaximumTest::testSpecialCaseNull";d:0;s:68:"Functional\Tests\MaximumTest::testSpecialCaseSameValueDifferentTypes";d:0;s:50:"Functional\Tests\MaximumTest::testPassNoCollection";d:0;s:57:"Functional\Tests\MemoizeTest::testMemoizeSimpleObjectCall";d:0.001;s:53:"Functional\Tests\MemoizeTest::testMemoizeFunctionCall";d:0;s:57:"Functional\Tests\MemoizeTest::testMemoizeStaticMethodCall";d:0;s:52:"Functional\Tests\MemoizeTest::testMemoizeClosureCall";d:0;s:54:"Functional\Tests\MemoizeTest::testMemoizeWithArguments";d:0;s:54:"Functional\Tests\MemoizeTest::testMemoizeWithCustomKey";d:0;s:70:"Functional\Tests\MemoizeTest::testResultIsNotStoredIfExceptionIsThrown";d:0;s:62:"Functional\Tests\MemoizeTest::testResetByPassingNullAsCallable";d:0;s:48:"Functional\Tests\MemoizeTest::testPassNoCallable";d:0;s:57:"Functional\Tests\MemoizeTest::testSplObjectHashCollisions";d:0;s:56:"Functional\Tests\MinimumTest::testExtractingMinimumValue";d:0;s:49:"Functional\Tests\MinimumTest::testSpecialCaseNull";d:0;s:68:"Functional\Tests\MinimumTest::testSpecialCaseSameValueDifferentTypes";d:0;s:50:"Functional\Tests\MinimumTest::testPassNoCollection";d:0;s:31:"Functional\Tests\NoneTest::test";d:0;s:47:"Functional\Tests\NoneTest::testPassNoCollection";d:0;s:46:"Functional\Tests\NoneTest::testPassNonCallable";d:0;s:45:"Functional\Tests\NoneTest::testPassNoCallable";d:0;s:55:"Functional\Tests\NoneTest::testExceptionIsThrownInArray";d:0;s:58:"Functional\Tests\NoneTest::testExceptionIsThrownInIterator";d:0;s:33:"Functional\Tests\NotTest::testNot";d:0;s:52:"Functional\Tests\OmitKeysTest::test with data set #0";d:0;s:52:"Functional\Tests\OmitKeysTest::test with data set #1";d:0;s:52:"Functional\Tests\OmitKeysTest::test with data set #2";d:0;s:52:"Functional\Tests\OmitKeysTest::test with data set #3";d:0;s:52:"Functional\Tests\OmitKeysTest::test with data set #4";d:0;s:52:"Functional\Tests\OmitKeysTest::test with data set #5";d:0;s:60:"Functional\Tests\OmitKeysTest::testPassNonArrayOrTraversable";d:0;s:56:"Functional\Tests\PartialAnyTest::testBindWithPlaceholder";d:0;s:64:"Functional\Tests\PartialAnyTest::testBindWithPlaceholderConstant";d:0;s:65:"Functional\Tests\PartialAnyTest::testBindWithMultiplePlaceholders";d:0;s:65:"Functional\Tests\PartialAnyTest::testPlaceholderParameterPosition";d:0;s:79:"Functional\Tests\PartialAnyTest::testNoFurtherArgumentsResolvedAfterPlaceholder";d:0;s:63:"Functional\Tests\PartialAnyTest::testAliasForUnicodePlaceholder";d:0;s:53:"Functional\Tests\PartialAnyTest::testStringConversion";d:0;s:48:"Functional\Tests\PartialLeftTest::testWithNoArgs";d:0;s:48:"Functional\Tests\PartialLeftTest::testWithOneArg";d:0;s:49:"Functional\Tests\PartialLeftTest::testWithTwoArgs";d:0;s:50:"Functional\Tests\PartialMethodTest::testWithNoArgs";d:0;s:51:"Functional\Tests\PartialMethodTest::testWithTwoArgs";d:0;s:57:"Functional\Tests\PartialMethodTest::testWithInvalidMethod";d:0;s:72:"Functional\Tests\PartialMethodTest::testWithInvalidMethodAndDefaultValue";d:0;s:68:"Functional\Tests\PartialMethodTest::testWithNonObjectAndDefaultValue";d:0;s:61:"Functional\Tests\PartialMethodTest::testWithInvalidMethodName";d:0;s:49:"Functional\Tests\PartialRightTest::testWithNoArgs";d:0;s:49:"Functional\Tests\PartialRightTest::testWithOneArg";d:0;s:50:"Functional\Tests\PartialRightTest::testWithTwoArgs";d:0;s:36:"Functional\Tests\PartitionTest::test";d:0;s:43:"Functional\Tests\PartitionTest::testMultiFn";d:0;s:60:"Functional\Tests\PartitionTest::testExceptionIsThrownInArray";d:0;s:59:"Functional\Tests\PartitionTest::testExceptionIsThrownInHash";d:0;s:63:"Functional\Tests\PartitionTest::testExceptionIsThrownInIterator";d:0;s:67:"Functional\Tests\PartitionTest::testExceptionIsThrownInHashIterator";d:0;s:52:"Functional\Tests\PartitionTest::testPassNoCollection";d:0;s:51:"Functional\Tests\PartitionTest::testPassNonCallable";d:0;s:31:"Functional\Tests\PickTest::test";d:0;s:68:"Functional\Tests\PickTest::testInvalidCollectionShouldThrowException";d:0;s:66:"Functional\Tests\PickTest::testInvalidCallbackShouldThrowException";d:0;s:43:"Functional\Tests\PickTest::testDefaultValue";d:0;s:45:"Functional\Tests\PickTest::testCustomCallback";d:0;s:42:"Functional\Tests\PickTest::testArrayAccess";d:0;s:65:"Functional\Tests\PluckTest::testPluckPropertyThatExistsEverywhere";d:0;s:64:"Functional\Tests\PluckTest::testPluckPropertyThatExistsSomewhere";d:0;s:64:"Functional\Tests\PluckTest::testPluckPropertyFromMixedCollection";d:0;s:54:"Functional\Tests\PluckTest::testPluckProtectedProperty";d:0;s:62:"Functional\Tests\PluckTest::testPluckPropertyInKeyedCollection";d:0;s:54:"Functional\Tests\PluckTest::testPluckNumericArrayIndex";d:0;s:58:"Functional\Tests\PluckTest::testNullLists with data set #0";d:0;s:58:"Functional\Tests\PluckTest::testNullLists with data set #1";d:0;s:57:"Functional\Tests\PluckTest::testNullHash with data set #0";d:0;s:57:"Functional\Tests\PluckTest::testNullHash with data set #1";d:0;s:48:"Functional\Tests\PluckTest::testPassNoCollection";d:0;s:50:"Functional\Tests\PluckTest::testPassNoPropertyName";d:0;s:78:"Functional\Tests\PluckTest::testExceptionThrownInMagicIssetWhileIteratingArray";d:0;s:81:"Functional\Tests\PluckTest::testExceptionThrownInMagicIssetWhileIteratingIterator";d:0;s:76:"Functional\Tests\PluckTest::testExceptionThrownInMagicGetWhileIteratingArray";d:0;s:79:"Functional\Tests\PluckTest::testExceptionThrownInMagicGetWhileIteratingIterator";d:0;s:47:"Functional\Tests\PluckTest::testClassCallsPluck";d:0;s:46:"Functional\Tests\PollTest::testPollReturnsTrue";d:0.002;s:53:"Functional\Tests\PollTest::testPollRetriesIfNotTruthy";d:0;s:64:"Functional\Tests\PollTest::testPollRetriesAndGivesUpAfterTimeout";d:0.002;s:61:"Functional\Tests\PollTest::testWithEmptyDelayCallsAtLeastOnce";d:0;s:71:"Functional\Tests\PollTest::testThrowsExceptionIfTimeoutCountNotAtLeast0";d:0;s:34:"Functional\Tests\ProductTest::test";d:0;s:80:"Functional\Tests\ProductTest::testElementsOfWrongTypeAreIgnored with data set #0";d:0;s:80:"Functional\Tests\ProductTest::testElementsOfWrongTypeAreIgnored with data set #1";d:0;s:80:"Functional\Tests\ProductTest::testElementsOfWrongTypeAreIgnored with data set #2";d:0;s:80:"Functional\Tests\ProductTest::testElementsOfWrongTypeAreIgnored with data set #3";d:0;s:80:"Functional\Tests\ProductTest::testElementsOfWrongTypeAreIgnored with data set #4";d:0;s:80:"Functional\Tests\ProductTest::testElementsOfWrongTypeAreIgnored with data set #5";d:0;s:80:"Functional\Tests\ProductTest::testElementsOfWrongTypeAreIgnored with data set #6";d:0;s:80:"Functional\Tests\ProductTest::testElementsOfWrongTypeAreIgnored with data set #7";d:0;s:50:"Functional\Tests\ProductTest::testPassNoCollection";d:0;s:32:"Functional\Tests\RatioTest::test";d:0;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #0";d:0;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #1";d:0;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #2";d:0;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #3";d:0;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #4";d:0;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #5";d:0;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #6";d:0;s:78:"Functional\Tests\RatioTest::testElementsOfWrongTypeAreIgnored with data set #7";d:0;s:48:"Functional\Tests\RatioTest::testPassNoCollection";d:0;s:41:"Functional\Tests\ReduceTest::testReducing";d:0;s:81:"Functional\Tests\ReduceTest::testExceptionThrownInIteratorCallbackWhileReduceLeft";d:0;s:82:"Functional\Tests\ReduceTest::testExceptionThrownInIteratorCallbackWhileReduceRight";d:0;s:78:"Functional\Tests\ReduceTest::testExceptionThrownInArrayCallbackWhileReduceLeft";d:0;s:79:"Functional\Tests\ReduceTest::testExceptionThrownInArrayCallbackWhileReduceRight";d:0;s:61:"Functional\Tests\ReduceTest::testPassNoCollectionToReduceLeft";d:0;s:60:"Functional\Tests\ReduceTest::testPassNonCallableToReduceLeft";d:0;s:62:"Functional\Tests\ReduceTest::testPassNoCollectionToReduceRight";d:0;s:61:"Functional\Tests\ReduceTest::testPassNonCallableToReduceRight";d:0;s:34:"Functional\Tests\ReindexTest::test";d:0;s:47:"Functional\Tests\ReindexTest::testDuplicateKeys";d:0;s:58:"Functional\Tests\ReindexTest::testExceptionIsThrownInArray";d:0;s:57:"Functional\Tests\ReindexTest::testExceptionIsThrownInHash";d:0;s:61:"Functional\Tests\ReindexTest::testExceptionIsThrownInIterator";d:0;s:65:"Functional\Tests\ReindexTest::testExceptionIsThrownInHashIterator";d:0;s:50:"Functional\Tests\ReindexTest::testPassNoCollection";d:0;s:49:"Functional\Tests\ReindexTest::testPassNonCallable";d:0;s:33:"Functional\Tests\RejectTest::test";d:0;s:48:"Functional\Tests\RejectTest::testPassNonCallable";d:0;s:47:"Functional\Tests\RejectTest::testPassNoCallable";d:0;s:49:"Functional\Tests\RejectTest::testPassNoCollection";d:0;s:57:"Functional\Tests\RejectTest::testExceptionIsThrownInArray";d:0;s:56:"Functional\Tests\RejectTest::testExceptionIsThrownInHash";d:0;s:60:"Functional\Tests\RejectTest::testExceptionIsThrownInIterator";d:0;s:64:"Functional\Tests\RejectTest::testExceptionIsThrownInHashIterator";d:0;s:33:"Functional\Tests\RepeatTest::test";d:0;s:54:"Functional\Tests\RepeatTest::testNegativeRepeatedTimes";d:0;s:53:"Functional\Tests\RetryTest::testTriedOnceIfItSucceeds";d:0;s:48:"Functional\Tests\RetryTest::testRetriedIfItFails";d:0;s:68:"Functional\Tests\RetryTest::testThrowsExceptionIfRetryCountIsReached";d:0;s:59:"Functional\Tests\RetryTest::testRetryWithEmptyDelaySequence";d:0;s:70:"Functional\Tests\RetryTest::testThrowsExceptionIfRetryCountNotAtLeast1";d:0;s:63:"Functional\Tests\RetryTest::testUsesDelayTraversableForSleeping";d:0;s:57:"Functional\Tests\RetryTest::testDelayerSmallerThanRetries";d:0;s:54:"Functional\Tests\SelectKeysTest::test with data set #0";d:0;s:54:"Functional\Tests\SelectKeysTest::test with data set #1";d:0;s:54:"Functional\Tests\SelectKeysTest::test with data set #2";d:0;s:54:"Functional\Tests\SelectKeysTest::test with data set #3";d:0;s:54:"Functional\Tests\SelectKeysTest::test with data set #4";d:0;s:62:"Functional\Tests\SelectKeysTest::testPassNonArrayOrTraversable";d:0;s:50:"Functional\Tests\SelectTest::test with data set #0";d:0;s:50:"Functional\Tests\SelectTest::test with data set #1";d:0;s:65:"Functional\Tests\SelectTest::testPassNonCallable with data set #0";d:0;s:65:"Functional\Tests\SelectTest::testPassNonCallable with data set #1";d:0;s:47:"Functional\Tests\SelectTest::testPassNoCallable";d:0;s:66:"Functional\Tests\SelectTest::testPassNoCollection with data set #0";d:0;s:66:"Functional\Tests\SelectTest::testPassNoCollection with data set #1";d:0;s:74:"Functional\Tests\SelectTest::testExceptionIsThrownInArray with data set #0";d:0;s:74:"Functional\Tests\SelectTest::testExceptionIsThrownInArray with data set #1";d:0;s:73:"Functional\Tests\SelectTest::testExceptionIsThrownInHash with data set #0";d:0;s:73:"Functional\Tests\SelectTest::testExceptionIsThrownInHash with data set #1";d:0;s:77:"Functional\Tests\SelectTest::testExceptionIsThrownInIterator with data set #0";d:0;s:77:"Functional\Tests\SelectTest::testExceptionIsThrownInIterator with data set #1";d:0;s:81:"Functional\Tests\SelectTest::testExceptionIsThrownInHashIterator with data set #0";d:0;s:81:"Functional\Tests\SelectTest::testExceptionIsThrownInHashIterator with data set #1";d:0;s:61:"Functional\Tests\SequenceConstantTest::testConstantIncrements";d:0;s:72:"Functional\Tests\SequenceConstantTest::testArgumentMustBePositiveInteger";d:0;s:87:"Functional\Tests\SequenceExponentialTest::testExponentialIncrementsWith100PercentGrowth";d:0.001;s:86:"Functional\Tests\SequenceExponentialTest::testExponentialIncrementsWith50PercentGrowth";d:0;s:80:"Functional\Tests\SequenceExponentialTest::testStartArgumentMustBePositiveInteger";d:0;s:81:"Functional\Tests\SequenceExponentialTest::testGrowthArgumentMustBePositiveInteger";d:0;s:92:"Functional\Tests\SequenceExponentialTest::testGrowthArgumentMustBePositiveIntegerLessThan100";d:0;s:57:"Functional\Tests\SequenceLinearTest::testLinearIncrements";d:0.001;s:65:"Functional\Tests\SequenceLinearTest::testLinearNegativeIncrements";d:0;s:70:"Functional\Tests\SequenceLinearTest::testArgumentMustBePositiveInteger";d:0;s:68:"Functional\Tests\SequenceLinearTest::testAmountArgumentMustBeInteger";d:0;s:31:"Functional\Tests\SomeTest::test";d:0;s:46:"Functional\Tests\SomeTest::testPassNonCallable";d:0;s:45:"Functional\Tests\SomeTest::testPassNoCallable";d:0;s:47:"Functional\Tests\SomeTest::testPassNoCollection";d:0;s:53:"Functional\Tests\SomeTest::testExceptionThrownInArray";d:0;s:58:"Functional\Tests\SomeTest::testExceptionThrownInCollection";d:0;s:43:"Functional\Tests\SortTest::testPreserveKeys";d:0;s:50:"Functional\Tests\SortTest::testWithoutPreserveKeys";d:0;s:46:"Functional\Tests\SortTest::testPassNonCallable";d:0;s:47:"Functional\Tests\SortTest::testPassNoCollection";d:0;s:55:"Functional\Tests\SortTest::testExceptionIsThrownInArray";d:0;s:54:"Functional\Tests\SortTest::testExceptionIsThrownInHash";d:0;s:58:"Functional\Tests\SortTest::testExceptionIsThrownInIterator";d:0;s:62:"Functional\Tests\SortTest::testExceptionIsThrownInHashIterator";d:0;s:30:"Functional\Tests\SumTest::test";d:0;s:76:"Functional\Tests\SumTest::testElementsOfWrongTypeAreIgnored with data set #0";d:0;s:76:"Functional\Tests\SumTest::testElementsOfWrongTypeAreIgnored with data set #1";d:0;s:76:"Functional\Tests\SumTest::testElementsOfWrongTypeAreIgnored with data set #2";d:0;s:76:"Functional\Tests\SumTest::testElementsOfWrongTypeAreIgnored with data set #3";d:0;s:76:"Functional\Tests\SumTest::testElementsOfWrongTypeAreIgnored with data set #4";d:0;s:76:"Functional\Tests\SumTest::testElementsOfWrongTypeAreIgnored with data set #5";d:0;s:76:"Functional\Tests\SumTest::testElementsOfWrongTypeAreIgnored with data set #6";d:0;s:76:"Functional\Tests\SumTest::testElementsOfWrongTypeAreIgnored with data set #7";d:0;s:46:"Functional\Tests\SumTest::testPassNoCollection";d:0;s:57:"Functional\Tests\SuppressErrorTest::testErrorIsSuppressed";d:0;s:57:"Functional\Tests\SuppressErrorTest::testFunctionIsWrapped";d:0;s:73:"Functional\Tests\SuppressErrorTest::testExceptionsAreHandledTransparently";d:0;s:64:"Functional\Tests\SuppressErrorTest::testErrorHandlerNestingWorks";d:0;s:54:"Functional\Tests\TailRecursionTest::testTailRecursion1";d:0;s:54:"Functional\Tests\TailRecursionTest::testTailRecursion2";d:0.002;s:31:"Functional\Tests\TailTest::test";d:0;s:46:"Functional\Tests\TailTest::testWithoutCallback";d:0;s:46:"Functional\Tests\TailTest::testPassNonCallable";d:0;s:55:"Functional\Tests\TailTest::testExceptionIsThrownInArray";d:0;s:60:"Functional\Tests\TailTest::testExceptionIsThrownInCollection";d:0;s:47:"Functional\Tests\TailTest::testPassNoCollection";d:0;s:35:"Functional\Tests\TakeLeftTest::test";d:0;s:36:"Functional\Tests\TakeRightTest::test";d:0;s:48:"Functional\Tests\TakeRightTest::testPreserveKeys";d:0;s:45:"Functional\Tests\TapTest::testPassNonCallable";d:0;s:33:"Functional\Tests\TapTest::testTap";d:0;s:31:"Functional\Tests\TrueTest::test";d:0;s:47:"Functional\Tests\TrueTest::testPassNoCollection";d:0;s:33:"Functional\Tests\TruthyTest::test";d:0;s:49:"Functional\Tests\TruthyTest::testPassNoCollection";d:0;s:48:"Functional\Tests\UniqueTest::testDefaultBehavior";d:0;s:50:"Functional\Tests\UniqueTest::testUnifyingByClosure";d:0;s:47:"Functional\Tests\UniqueTest::testUnifyingStrict";d:0;s:54:"Functional\Tests\UniqueTest::testPassingNullAsCallback";d:0;s:57:"Functional\Tests\UniqueTest::testExceptionIsThrownInArray";d:0;s:56:"Functional\Tests\UniqueTest::testExceptionIsThrownInHash";d:0;s:60:"Functional\Tests\UniqueTest::testExceptionIsThrownInIterator";d:0;s:64:"Functional\Tests\UniqueTest::testExceptionIsThrownInHashIterator";d:0;s:49:"Functional\Tests\UniqueTest::testPassNoCollection";d:0;s:65:"Functional\Tests\UniqueTest::testPassNonCallableUndefinedFunction";d:0;s:84:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set "Nothing"";d:0;s:81:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set "NULL"";d:0;s:88:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set "null string"";d:0;s:83:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set "string"";d:0;s:85:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set "integers"";d:0;s:91:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set "funky integers"";d:0;s:92:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set "integer & float"";d:0;s:92:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set "array of string"";d:0;s:104:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set "nested array of strings (1)"";d:0;s:112:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set "nested array of strings (variation)"";d:0;s:110:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set "multiple nested arrays of strings"";d:0;s:122:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set "multiple nested arrays of strings (variation)"";d:0;s:83:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set "hashes"";d:0;s:77:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set #0";d:0;s:77:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set #1";d:0;s:77:"Functional\Tests\ValueToKeyTest::testValueToRefOnSimpleTypes with data set #2";d:0;s:64:"Functional\Tests\ValueToKeyTest::testExpectationsAreNonIdentical";d:0;s:75:"Functional\Tests\ValueToKeyTest::testResourcesAreForbidden with data set #0";d:0;s:75:"Functional\Tests\ValueToKeyTest::testResourcesAreForbidden with data set #1";d:0;s:75:"Functional\Tests\ValueToKeyTest::testResourcesAreForbidden with data set #2";d:0;s:75:"Functional\Tests\ValueToKeyTest::testResourcesAreForbidden with data set #3";d:0;s:65:"Functional\Tests\ValueToKeyTest::testObjectReferencesWithStdClass";d:0;s:68:"Functional\Tests\ValueToKeyTest::testObjectReferencesWithArrayObject";d:0;s:39:"Functional\Tests\WithTest::testWithNull";d:0;s:40:"Functional\Tests\WithTest::testWithValue";d:0;s:46:"Functional\Tests\WithTest::testPassNonCallable";d:0;s:43:"Functional\Tests\WithTest::testDefaultValue";d:0;s:38:"Functional\Tests\ZipAllTest::testEmpty";d:0;s:44:"Functional\Tests\ZipAllTest::testMissingKeys";d:0;s:48:"Functional\Tests\ZipAllTest::testDifferentLength";d:0;s:41:"Functional\Tests\ZipAllTest::testCallback";d:0;s:41:"Functional\Tests\ZipAllTest::testIterator";d:0;s:52:"Functional\Tests\ZipTest::testZippingSameSizedArrays";d:0;s:59:"Functional\Tests\ZipTest::testZippingDifferentlySizedArrays";d:0;s:43:"Functional\Tests\ZipTest::testZippingHashes";d:0;s:49:"Functional\Tests\ZipTest::testZippingWithCallback";d:0;s:62:"Functional\Tests\ZipTest::testZippingArraysWithVariousElements";d:0;s:45:"Functional\Tests\ZipTest::testZipSpecialCases";d:0;s:58:"Functional\Tests\ZipTest::testPassNoCollectionAsFirstParam";d:0;s:59:"Functional\Tests\ZipTest::testPassNoCollectionAsSecondParam";d:0;s:49:"Functional\Tests\ZipTest::testExceptionInCallback";d:0;}}}